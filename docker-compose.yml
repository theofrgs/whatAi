services:
  api:
    container_name: api
    build:
      context: ./api
      target: development
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - ./api/.env
    environment:
      - DB_HOST=database
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "wget -q --spider http://localhost:${API_PORT}/health || exit 1"
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
    networks:
      - default

  database:
    image: mariadb:latest
    restart: always
    container_name: mariadb
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_INIT_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./docker/volumes/data:/var/lib/mysql
    healthcheck:
      interval: 10s
      retries: 10
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
      timeout: 10s
    networks:
      - default

  phpmyadmin:
    image: phpmyadmin
    restart: always
    container_name: phpmyadmin
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: database
      PMA_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${DB_INIT_ROOT_PASSWORD}
    platform: linux/arm64
    networks:
      - default

  web:
    container_name: web
    build:
      context: ./web
      target: development
    volumes:
      - ./web:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    env_file:
      - ./web/.env
    networks:
      - default
    restart: always

networks:
  default:
    driver: bridge
